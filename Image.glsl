#define STRLEN 50
#define String int[STRLEN]
vec4 Print(vec2 fragCoord, ivec2 LowerLeft, String Line)
{
    ivec2 Area = ivec2(STRLEN * 8, 8);
    ivec2 Pixel = ivec2(floor(fragCoord)) - LowerLeft;
    if (Pixel.x >= 0 && Pixel.y >= 0 && Pixel.x < Area.x && Pixel.y < Area.y)
    {
        int GlyphsPerRow = int(floor(iResolution.x)) / 8;
        int GlyphIndex = Line[Pixel.x / 8];
        if (GlyphIndex >= 0)
        {
        	ivec2 Glyph = ivec2(GlyphIndex % GlyphsPerRow, GlyphIndex / GlyphsPerRow);
			vec2 UV = vec2(0.5 + vec2(Glyph * 8 + (Pixel % 8))) / iResolution.xy;
        	return vec4(texture(iChannel0, UV).rgb, 1.0);
        }
    }
	return vec4(0.0);
}
 
 
//int a[] = int[](3, 4, 4, 2);

//int a = 0;
//#define text 1, 2, 3

/*
#define LINE_00 44, 79, 82, 69, 77, 0, 73, 80, 83, 85, 77, 0, 68, 79, 76, 79, 82, 0, 83, 73, 84, 0, 65, 77, 69, 84, 12, 0, 67, 79, 78, 83, 69, 67, 84, 69, 84, 85, 82, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
#define LINE_01 65, 68, 73, 80, 73, 83, 67, 73, 78, 71, 0, 69, 76, 73, 84, 12, 0, 83, 69, 68, 0, 68, 79, 0, 69, 73, 85, 83, 77, 79, 68, 0, 84, 69, 77, 80, 79, 82, 0, 73, 78, 67, 73, 68, 73, 68, 85, 78, 84, -1
#define LINE_02 85, 84, 0, 76, 65, 66, 79, 82, 69, 0, 69, 84, 0, 68, 79, 76, 79, 82, 69, 0, 77, 65, 71, 78, 65, 0, 65, 76, 73, 81, 85, 65, 14, 0, 53, 84, 0, 69, 78, 73, 77, 0, 65, 68, -1, -1, -1, -1, -1, -1
#define LINE_03 77, 73, 78, 73, 77, 0, 86, 69, 78, 73, 65, 77, 12, 0, 81, 85, 73, 83, 0, 78, 79, 83, 84, 82, 85, 68, 0, 69, 88, 69, 82, 67, 73, 84, 65, 84, 73, 79, 78, 0, 85, 76, 76, 65, 77, 67, 79, 0, -1, -1
#define LINE_04 76, 65, 66, 79, 82, 73, 83, 0, 78, 73, 83, 73, 0, 85, 84, 0, 65, 76, 73, 81, 85, 73, 80, 0, 69, 88, 0, 69, 65, 0, 67, 79, 77, 77, 79, 68, 79, 0, 67, 79, 78, 83, 69, 81, 85, 65, 84, 14, 0, -1
#define LINE_05 36, 85, 73, 83, 0, 65, 85, 84, 69, 0, 73, 82, 85, 82, 69, 0, 68, 79, 76, 79, 82, 0, 73, 78, 0, 82, 69, 80, 82, 69, 72, 69, 78, 68, 69, 82, 73, 84, 0, 73, 78, 0, -1, -1, -1, -1, -1, -1, -1, -1
#define LINE_06 86, 79, 76, 85, 80, 84, 65, 84, 69, 0, 86, 69, 76, 73, 84, 0, 69, 83, 83, 69, 0, 67, 73, 76, 76, 85, 77, 0, 68, 79, 76, 79, 82, 69, 0, 69, 85, 0, 70, 85, 71, 73, 65, 84, 0, -1, -1, -1, -1, -1
#define LINE_07 78, 85, 76, 76, 65, 0, 80, 65, 82, 73, 65, 84, 85, 82, 14, 0, 37, 88, 67, 69, 80, 84, 69, 85, 82, 0, 83, 73, 78, 84, 0, 79, 67, 67, 65, 69, 67, 65, 84, 0, 67, 85, 80, 73, 68, 65, 84, 65, 84, -1
#define LINE_08 78, 79, 78, 0, 80, 82, 79, 73, 68, 69, 78, 84, 12, 0, 83, 85, 78, 84, 0, 73, 78, 0, 67, 85, 76, 80, 65, 0, 81, 85, 73, 0, 79, 70, 70, 73, 67, 73, 65, 0, 68, 69, 83, 69, 82, 85, 78, 84, -1, -1
#define LINE_09 77, 79, 76, 76, 73, 84, 0, 65, 78, 73, 77, 0, 73, 68, 0, 69, 83, 84, 0, 76, 65, 66, 79, 82, 85, 77, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
#define LINE_10 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
#define LINE_11 52, 72, 69, 0, 81, 85, 73, 67, 75, 0, 66, 82, 79, 87, 78, 0, 70, 79, 88, 0, 74, 85, 77, 80, 83, 0, 79, 86, 69, 82, 0, 84, 72, 69, 0, 76, 65, 90, 89, 0, 68, 79, 71, 14, -1, -1, -1, -1, -1, -1
#define LINE_12 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
#define LINE_13 17, 18, 19, 20, 21, 22, 23, 24, 25, 16, 59, 61, 1, 32, 3, 4, 5, 62, 6, 10, 8, 9, 91, 93, 11, 31, 29, 2, 28, 30, 29, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
#define LINE_14 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
*/

#define LINE_15 33, 69, 86, 65, 0, 87, 65, 83, 0, 72, 69, 82, 69, 0, 62, 63, 62, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
/*
int LINE_14[50] = int[50](-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1);
*/

//tiene q tener 50 enteros por algun motivo
#define _0 16
#define _1 17
#define _2 18
#define _3 19
#define LINE_14 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, _0, _1, _2, _3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

#define PRINT(LINE) Text += Print(fragCoord / Scale, ivec2(0, (Cursor++) * 8), String(LINE));

/*
void once() {
    int LINE_14_1[50] = LINE_14;

    for (int i = 0; i < 50; i++) {
        LINE_14_1(i) = -1;
    }
}
*/

void mainImage(out vec4 fragColor, in vec2 fragCoord)
{  
    float SlugWidth = float(STRLEN) * 8.0;
    float Scale = max(round(iResolution.x / SlugWidth), 1.0);
       
    int Cursor = 1;
    vec4 Text = vec4(0.0);
    
    //PRINT(text);
    
    
    PRINT(LINE_14);
    
    /*
    PRINT(LINE_14);
    PRINT(LINE_13);
    PRINT(LINE_12);
    PRINT(LINE_11);
    PRINT(LINE_10);
    PRINT(LINE_09);
    PRINT(LINE_08);
    PRINT(LINE_07);
    PRINT(LINE_06);
    PRINT(LINE_05);
    PRINT(LINE_04);
    PRINT(LINE_03);
    PRINT(LINE_02);
    PRINT(LINE_01);
    
    
    PRINT(LINE_00);
    */
    
    fragColor.rgb = mix(vec3(fragCoord.x / iResolution.x * 0.5 + 0.5), Text.rgb, Text.a);
}
